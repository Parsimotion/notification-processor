name: Release

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      prereleaseTag:
        description: 'Nombre del prerelease tag (ej: alpha, beta)'
        required: false
        default: 'alpha'

env:
  NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

jobs:
  buildImage:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

    steps:
      - name: Setup repository
        uses: actions/checkout@v3

      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version: "12"
          cache: "npm"

      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ env.NPM_TOKEN }}" > ~/.npmrc

      - name: Remove node_modules
        run: rm -rf node_modules

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Remove temps
        run: rm -rf .tmp dist/.git

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            lib/
            package.json
            package-lock.json

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node (v22 para releaseteca)
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ env.NPM_TOKEN }}" > ~/.npmrc

      - name: Configure Git
        run: |
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@producteca.com"
      
      - name: Set PRERELEASE_TAG (if manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          TAG=${{inputs.prereleaseTag }}
          TAG=${TAG:-alpha}
          # Validar que sea alfanumérico, guiones y puntos (ej: beta, test-1.2)
          if [[ ! "$TAG" =~ ^[a-zA-Z0-9._-]+$ ]]; then
            echo "❌ Invalid prereleaseTag: '$TAG'. Must be alphanumeric with optional dots, dashes or underscores."
            exit 1
          fi
          echo "✅ Using prerelease tag: $TAG"
          echo "PRERELEASE_TAG=$TAG" >> $GITHUB_ENV
      
      - name: Release with releaseteca
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: npx --yes --package @producteca/releaseteca releaseteca